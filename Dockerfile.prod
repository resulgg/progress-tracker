# Use Node.js LTS (20.x) as the base image
FROM node:20-alpine

# Install dependencies
RUN apk add --no-cache libc6-compat curl

WORKDIR /app

# Copy package files
COPY package.json package-lock.json* yarn.lock* pnpm-lock.yaml* ./

# Install package manager based on lock files
RUN if [ -f "pnpm-lock.yaml" ]; then \
        corepack enable && pnpm install --frozen-lockfile; \
    elif [ -f "yarn.lock" ]; then \
        corepack enable && yarn install --frozen-lockfile; \
    else \
        npm install --legacy-peer-deps; \
    fi

# Copy the rest of the application
COPY . .

# Build the application
RUN if [ -f "pnpm-lock.yaml" ]; then \
        pnpm build; \
    elif [ -f "yarn.lock" ]; then \
        yarn build; \
    else \
        npm run build; \
    fi

# Copy standalone build and dependencies
RUN cp -R .next/standalone/* ./ && \
    cp -R .next/static .next/standalone/.next/static && \
    rm -rf .next/standalone/.next/cache

# Disable telemetry
ENV NEXT_TELEMETRY_DISABLED 1
ENV NODE_ENV production

# Create entrypoint script with dynamic package manager selection
RUN echo '#!/bin/sh' > /entrypoint.sh && \
    echo 'if [ -f "pnpm-lock.yaml" ]; then' >> /entrypoint.sh && \
    echo '    pnpm db:generate' >> /entrypoint.sh && \
    echo '    pnpm db:migrate' >> /entrypoint.sh && \
    echo '    pnpm db:seed' >> /entrypoint.sh && \
    echo '    node server.js' >> /entrypoint.sh && \
    echo 'elif [ -f "yarn.lock" ]; then' >> /entrypoint.sh && \
    echo '    yarn db:generate' >> /entrypoint.sh && \
    echo '    yarn db:migrate' >> /entrypoint.sh && \
    echo '    yarn db:seed' >> /entrypoint.sh && \
    echo '    node server.js' >> /entrypoint.sh && \
    echo 'else' >> /entrypoint.sh && \
    echo '    npm run db:generate' >> /entrypoint.sh && \
    echo '    npm run db:migrate' >> /entrypoint.sh && \
    echo '    npm run db:seed' >> /entrypoint.sh && \
    echo '    node server.js' >> /entrypoint.sh && \
    echo 'fi' >> /entrypoint.sh && \
    chmod +x /entrypoint.sh

# Create non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs && \
    chown -R nextjs:nodejs /app/.next && chown -R nextjs:nodejs /entrypoint.sh  # Give ownership of the script to nextjs user

USER nextjs

# Expose port 3000
EXPOSE 3000

ENV PORT 3000
ENV HOSTNAME "0.0.0.0"

CMD ["/entrypoint.sh"]
